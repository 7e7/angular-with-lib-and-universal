@import 'z-index.scss';
@import 'variables.scss';

/* Utilities */
.display-inherit {
  display: inherit;
}

/* Box Sizing */
.border-box {
  box-sizing: border-box;
}

/* Sticky and Relative Positioning */
.sticky {
  position: sticky;
}

/* Lazy Scroll */
.webkit-touch-scroll {
  -webkit-overflow-scrolling: touch;
}

/* Visibility */
.visibility-hidden {
  visibility: hidden;
}

.visibility-visible {
  visibility: visible;
}

/* Bold on hover */
.b-hover:hover {
  font-weight: bold;
}
/* Block border */
.jb-block-border {
  border-color: $sky-blue;
}

@media (pointer: fine) and (hover: hover),
  (-moz-touch-enabled: 0),
  (-ms-high-contrast: none) {
  .jb-block-border:hover {
    border-color: $royal-blue;
    box-shadow: $jb-shadow-1;
  }
}

/**
 * https://github.com/ampproject/amphtml/blob/master/css/amp.css
 *
 * Makes elements visually invisible but still accessible to screen-readers.
 *
 * This Css has been carefully tested to ensure screen-readers can read and
 * activate (in case of links and buttons) the elements with this class. Please
 * use caution when changing anything, even seemingly safe ones. For example
 * changing width from 1 to 0 would prevent TalkBack from activating (clicking)
 * buttons despite TalkBack reading them just fine. This is because
 * element needs to have a defined size and be on viewport otherwise TalkBack
 * does not allow activation of buttons.
 */

.screen-reader-only {
  position: fixed !important;
  /* keep it on viewport */
  top: 0px !important;
  left: 0px !important;
  /* give it non-zero size, VoiceOver on Safari requires at least 2 pixels
     before allowing buttons to be activated. */
  width: 4px !important;
  height: 4px !important;
  /* visually hide it with overflow and opacity */
  opacity: 0 !important;
  overflow: hidden !important;
  /* remove any margin or padding */
  border: none !important;
  margin: 0 !important;
  padding: 0 !important;
  /* ensure no other style sets display to none */
  display: block !important;
  visibility: visible !important;
}

// Vertical padding used for jbButton
.pv-18 {
  padding-top: 1.125rem; //18px
  padding-bottom: 1.125rem; //18px
}

.pointer-events-none {
  pointer-events: none;
}

.pointer-events-auto {
  pointer-events: auto;
}

.cursor-not-allowed {
  cursor: not-allowed;
}

@media #{$breakpoint-not-small} {
  .dn-ns {
    display: none;
  }
}

@media screen and (max-width: 48em) {
  .dn-s {
    display: none;
  }
}

@media #{$breakpoint-not-small} {
  .flex-1-ns {
    flex: 1;
  }
}

@media #{$breakpoint-not-small} {
  .flex-basis-0-ns {
    flex-basis: 0rem;
  }
}

@media #{$breakpoint-not-small} {
  .items-initial-ns {
    align-items: initial;
  }
}

/* --- Jb-Link Flex  --------- */

// Making jb-link into flex item
.link-flex > a {
  display: flex;
}

// Making jb-link into column layout
.link-column > a {
  flex-direction: column;
}

/* --- Flex-Basis 100% --------- */
.fb-100 {
  flex-basis: 100%;
}

/* Horizontal and vertical centering */
.absolute-center {
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.disable-scroll-in-layer {
  position: relative;
  overflow: hidden;
  z-index: $zIndex-0--screenBackground;
}

.disable-scroll-in-layer-ios {
  position: fixed;
  overflow: hidden;
  height: 100%;
  width: 100%;
  z-index: $zIndex-0--screenBackground;
}

/* header height specifically needs to be 40px on desktop all the way down
to mobile which is why rem is not used */

.mv-11 {
  margin-top: 11px;
  margin-bottom: 11px;
}

// top positioning class, tachyons does not have a 3 rem value
@media #{$breakpoint-not-small} {
  .top-3-ns {
    top: 3rem;
  }

  .filter-w-20-ns {
    width: 20rem;
  }
}
